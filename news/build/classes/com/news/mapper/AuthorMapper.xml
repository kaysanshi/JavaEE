<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.news.mapper.AuthorMapper" >
  <resultMap id="BaseResultMap" type="com.news.entity.Author" >
    <id column="author_id" property="authorId" jdbcType="VARCHAR" />
    <result column="author_abstract" property="authorAbstract" jdbcType="VARCHAR" />
    <result column="author_createtime" property="authorCreatetime" jdbcType="TIMESTAMP" />
    <result column="author_subscribe" property="authorSubscribe" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
  </resultMap>
   <update id="updateByPrimaryKeySelective" parameterType="com.news.entity.Author" >
    update author
    <set >
     
      <if test="authorAbstract != null" >
        author_abstract = #{authorAbstract,jdbcType=VARCHAR},
      </if>
     
      <if test="authorSubscribe != null" >
        author_subscribe = #{authorSubscribe,jdbcType=INTEGER},
      </if>
      
    </set>
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <insert id="addAuthor" parameterType="com.news.entity.Author" >
    insert into author (author_id,author_abstract, author_createtime, author_subscribe,user_id)
    values (#{authorId,jdbcType=VARCHAR},#{authorAbstract,jdbcType=VARCHAR},
     #{authorCreatetime,jdbcType=TIMESTAMP}, #{authorSubscribe,jdbcType=INTEGER},#{userId,jdbcType=VARCHAR})
  </insert>
  <select id="getAuthorByUserId" resultMap="BaseResultMap" parameterType="java.lang.String" >
  	select * from author where user_id = #{id}
  </select>
   <update id="updateSubscribeCount" parameterType="java.lang.Integer" >
    update author
    <set >
        author_subscribe = #{count,jdbcType=INTEGER}
    </set>
   
  </update>
  <!-- <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    author_id, author_phone, author_img_url, author_abstract, author_createtime, author_subscribe, 
    user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.news.entity.AuthorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from author
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from author
    where author_id = #{authorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from author
    where author_id = #{authorId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.news.entity.AuthorExample" >
    delete from author
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.news.entity.Author" >
    insert into author (author_id, author_phone, author_img_url, 
      author_abstract, author_createtime, author_subscribe, 
      user_id)
    values (#{authorId,jdbcType=VARCHAR}, #{authorPhone,jdbcType=VARCHAR}, #{authorImgUrl,jdbcType=VARCHAR}, 
      #{authorAbstract,jdbcType=VARCHAR}, #{authorCreatetime,jdbcType=TIMESTAMP}, #{authorSubscribe,jdbcType=INTEGER}, 
      #{userId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.news.entity.Author" >
    insert into author
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="authorId != null" >
        author_id,
      </if>
      <if test="authorPhone != null" >
        author_phone,
      </if>
      <if test="authorImgUrl != null" >
        author_img_url,
      </if>
      <if test="authorAbstract != null" >
        author_abstract,
      </if>
      <if test="authorCreatetime != null" >
        author_createtime,
      </if>
      <if test="authorSubscribe != null" >
        author_subscribe,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="authorId != null" >
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="authorPhone != null" >
        #{authorPhone,jdbcType=VARCHAR},
      </if>
      <if test="authorImgUrl != null" >
        #{authorImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="authorAbstract != null" >
        #{authorAbstract,jdbcType=VARCHAR},
      </if>
      <if test="authorCreatetime != null" >
        #{authorCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="authorSubscribe != null" >
        #{authorSubscribe,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.news.entity.AuthorExample" resultType="java.lang.Integer" >
    select count(*) from author
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update author
    <set >
      <if test="record.authorId != null" >
        author_id = #{record.authorId,jdbcType=VARCHAR},
      </if>
      <if test="record.authorPhone != null" >
        author_phone = #{record.authorPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.authorImgUrl != null" >
        author_img_url = #{record.authorImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.authorAbstract != null" >
        author_abstract = #{record.authorAbstract,jdbcType=VARCHAR},
      </if>
      <if test="record.authorCreatetime != null" >
        author_createtime = #{record.authorCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.authorSubscribe != null" >
        author_subscribe = #{record.authorSubscribe,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update author
    set author_id = #{record.authorId,jdbcType=VARCHAR},
      author_phone = #{record.authorPhone,jdbcType=VARCHAR},
      author_img_url = #{record.authorImgUrl,jdbcType=VARCHAR},
      author_abstract = #{record.authorAbstract,jdbcType=VARCHAR},
      author_createtime = #{record.authorCreatetime,jdbcType=TIMESTAMP},
      author_subscribe = #{record.authorSubscribe,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.news.entity.Author" >
    update author
    <set >
      <if test="authorPhone != null" >
        author_phone = #{authorPhone,jdbcType=VARCHAR},
      </if>
      <if test="authorImgUrl != null" >
        author_img_url = #{authorImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="authorAbstract != null" >
        author_abstract = #{authorAbstract,jdbcType=VARCHAR},
      </if>
      <if test="authorCreatetime != null" >
        author_createtime = #{authorCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="authorSubscribe != null" >
        author_subscribe = #{authorSubscribe,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.news.entity.Author" >
    update author
    set author_phone = #{authorPhone,jdbcType=VARCHAR},
      author_img_url = #{authorImgUrl,jdbcType=VARCHAR},
      author_abstract = #{authorAbstract,jdbcType=VARCHAR},
      author_createtime = #{authorCreatetime,jdbcType=TIMESTAMP},
      author_subscribe = #{authorSubscribe,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR}
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update> -->
</mapper>