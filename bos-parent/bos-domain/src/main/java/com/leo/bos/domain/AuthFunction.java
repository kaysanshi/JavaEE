package com.leo.bos.domain;
// Generated 2018-10-15 20:00:14 by Hibernate Tools 3.5.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.apache.xmlbeans.impl.xb.xsdschema.Public;

/**
 * 权限
 * AuthFunction generated by hbm2java
 */
@Entity
@Table(name = "auth_function", catalog = "bos")
public class AuthFunction implements java.io.Serializable {

	private String id;
	private AuthFunction authFunction;//父标签
	private String name;
	private String code;
	private String description;
	private String page;
	private String generatemenu; //是否生成菜单1.是。0.否
	private Integer zindex;
	private Set<AuthFunction> authFunctions = new HashSet<AuthFunction>(0);//子标签
	private Set<AuthRole> authRoles = new HashSet<AuthRole>(0);
	private String pId;
	//获取pid让前台去展示出来
	public String getpId() {
		if (authFunction==null) {
			return "0";
		}
		return authFunction.getId();
	}
	public AuthFunction() {
	}

	public AuthFunction(String id) {
		this.id = id;
	}

	public AuthFunction(String id, AuthFunction authFunction, String name, String code, String description, String page,
			String generatemenu, Integer zindex, Set<AuthFunction> authFunctions, Set<AuthRole> authRoles) {
		this.id = id;
		this.authFunction = authFunction;
		this.name = name;
		this.code = code;
		this.description = description;
		this.page = page;
		this.generatemenu = generatemenu;
		this.zindex = zindex;
		this.authFunctions = authFunctions;
		this.authRoles = authRoles;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, length = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pid")
	public AuthFunction getAuthFunction() {
		return this.authFunction;
	}

	public void setAuthFunction(AuthFunction authFunction) {
		this.authFunction = authFunction;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "code")
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "page")
	public String getPage() {
		return this.page;
	}

	public void setPage(String page) {
		this.page = page;
	}

	@Column(name = "generatemenu")
	public String getGeneratemenu() {
		return this.generatemenu;
	}

	public void setGeneratemenu(String generatemenu) {
		this.generatemenu = generatemenu;
	}

	@Column(name = "zindex")
	public Integer getZindex() {
		return this.zindex;
	}

	public void setZindex(Integer zindex) {
		this.zindex = zindex;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authFunction")
	public Set<AuthFunction> getAuthFunctions() {
		return this.authFunctions;
	}

	public void setAuthFunctions(Set<AuthFunction> authFunctions) {
		this.authFunctions = authFunctions;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "role_function", catalog = "bos", joinColumns = {
			@JoinColumn(name = "function_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<AuthRole> getAuthRoles() {
		return this.authRoles;
	}

	public void setAuthRoles(Set<AuthRole> authRoles) {
		this.authRoles = authRoles;
	}
	public void setpId(String pId) {
		this.pId = pId;
	}

}
