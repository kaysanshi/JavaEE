package com.leo.bos.domain;
// Generated 2018-10-15 20:00:14 by Hibernate Tools 3.5.0.Final

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import freemarker.template.SimpleDate;

/**
 * TUser generated by hbm2java
 */
@Entity
@Table(name = "t_user", catalog = "bos")
public class User implements java.io.Serializable {

	private String id;
	private String username;
	private String password;
	private Double salary;
	private Date birthday;
	private String gender;
	private String station;
	private String telephone;
	private String remark;
	private Set<QpNoticebill> qpNoticebills = new HashSet<QpNoticebill>(0);
	private Set<AuthRole> authRoles = new HashSet<AuthRole>(0);
	
	//为了让前台的roleNames显示数据
	public String getRoleNames() {
		String roleNames="";
		for(AuthRole role:authRoles) {
			String name=role.getName();
			roleNames+=name+" ";
		}
		return roleNames;
	}
	/**
	 * 处理生日：为了让[object,object]--->[格式化后的]
	 */
	public String getBriday(){
		if (birthday!=null) {
			String format =new SimpleDateFormat("yyyy-MM-dd").format(birthday);
			return format;
		}else {
			return "暂无数据";
		}
	}
	
	public User() {
	}

	public User(String id) {
		this.id = id;
	}

	public User(String id, String username, String password, Double salary, Date birthday, String gender,
			String station, String telephone, String remark, Set<QpNoticebill> qpNoticebills, Set<AuthRole> authRoles) {
		this.id = id;
		this.username = username;
		this.password = password;
		this.salary = salary;
		this.birthday = birthday;
		this.gender = gender;
		this.station = station;
		this.telephone = telephone;
		this.remark = remark;
		this.qpNoticebills = qpNoticebills;
		this.authRoles = authRoles;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, length = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "username", length = 20)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 32)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "salary", precision = 22, scale = 0)
	public Double getSalary() {
		return this.salary;
	}

	public void setSalary(Double salary) {
		this.salary = salary;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birthday", length = 10)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "gender", length = 10)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "station", length = 40)
	public String getStation() {
		return this.station;
	}

	public void setStation(String station) {
		this.station = station;
	}

	@Column(name = "telephone", length = 11)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "remark")
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUser")
	public Set<QpNoticebill> getQpNoticebills() {
		return this.qpNoticebills;
	}

	public void setQpNoticebills(Set<QpNoticebill> qpNoticebills) {
		this.qpNoticebills = qpNoticebills;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_role", catalog = "bos", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<AuthRole> getAuthRoles() {
		return this.authRoles;
	}

	public void setAuthRoles(Set<AuthRole> authRoles) {
		this.authRoles = authRoles;
	}

}
