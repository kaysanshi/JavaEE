package com.leo.bos.domain;
// Generated 2018-10-15 20:00:14 by Hibernate Tools 3.5.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * AuthRole generated by hbm2java
 */
@Entity
@Table(name = "auth_role", catalog = "bos")
public class AuthRole implements java.io.Serializable {

	private String id;
	private String name;
	private String code;
	private String description;
	private Set<AuthFunction> authFunctions = new HashSet<AuthFunction>(0);
	private Set<User> TUsers = new HashSet<User>(0);

	public AuthRole() {
	}

	public AuthRole(String id) {
		this.id = id;
	}

	public AuthRole(String id, String name, String code, String description, Set<AuthFunction> authFunctions,
			Set<User> TUsers) {
		this.id = id;
		this.name = name;
		this.code = code;
		this.description = description;
		this.authFunctions = authFunctions;
		this.TUsers = TUsers;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, length = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "code")
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "role_function", catalog = "bos", joinColumns = {
			@JoinColumn(name = "role_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "function_id", nullable = false, updatable = false) })
	public Set<AuthFunction> getAuthFunctions() {
		return this.authFunctions;
	}

	public void setAuthFunctions(Set<AuthFunction> authFunctions) {
		this.authFunctions = authFunctions;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_role", catalog = "bos", joinColumns = {
			@JoinColumn(name = "role_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_id", nullable = false, updatable = false) })
	public Set<User> getTUsers() {
		return this.TUsers;
	}

	public void setTUsers(Set<User> TUsers) {
		this.TUsers = TUsers;
	}

}
