<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
    <!--  -->
<hibernate-mapping package="com.leo.domain">
	<class name="Customer" table="cust_customer">
	<!-- id映射主键属性name：填对应的属性名，column列名 -->
		<id name="cust_id" column="cust_id">
			<!-- 生成主键策略
				主键的生成规则：
				identity :主键自增，录入是不需要指定id的
				increate:主键自增，由hinbernate维护，每次会查询id最大值，然后另其+1（勿用线程安全问题）
				sequence：oracle主键生成策略
				hilo：一种主键自增的策略；高低算法，由hinbernate维护 （不需要用）
				native：hilo+sequence+identity自动三选一，有配置文件筛选出来；
				uuid:string类型的主键，产生随机数id
				assigned:自然生成，有开发人员维护主键
			 -->
			<generator class="identity"></generator>
		</id>
		<!-- property是除id以外的普通属性的映射 
			name:属性名 默认使用属性名
			cloumn（可选）:填写列名
			type（可选）:填写属性的类型，Java属性，hibernate属性，数据库属性
			not-null:默认false
			length（可选）:配置数据库的列的长度，默认数据库类型最大长度	
		-->
		<property name="cust_name" column="cust_name"></property>
		<property name="cust_source" column="cust_source" ></property>
		<property name="cust_industry" column="cust_industry" ></property>
		<property name="cust_level" column="cust_level" ></property>
		<property name="cust_linkman" column="cust_linkman" ></property>
		<property name="cust_phone" column="cust_phone" ></property>
		<property name="cust_mobile" column="cust_mobile" ></property>
		<!-- 集合一对多 -->
		<!--name:集合的属性名，class:与外键关联的完整的类名 ，column:是哪个列为外键  -->
		<!--级联操作：cascade=""  save-update:级联保存更新，delete：级联删除，all:级联删除和保存
			操作性质：是数据的操作的简化
		  -->
		  <!-- inverse属性：配置关系是否维护 ,true:是让对方维护这个关系
		  	false:是双方都会维护的
		  	如果不配置是双方都会维护的
		  	原则：总有一方要维护关系
		  	只能是一的一方放弃维护关系，多的一方必须维护
		  	-->
<!-- 
		集合的关联
		fetch 决定加载的sql语句
			select: 使用单表查询
			join : 多表查询
			subselect:使用子查询
		lazy  决定加载时机
			false: 立即加载
			true:延迟jiazai
			extra:及其懒惰
		 -->
		<set name="linkMens" inverse="true" lazy="true" fetch="select">
			<key column="lkm_cust_id"/>
			<one-to-many class="LinkMan"/>
		</set>
	</class>
</hibernate-mapping>