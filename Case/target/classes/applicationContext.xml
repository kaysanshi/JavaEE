<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"
		default-autowire="default">
<!-- 指定spring读取db.properties配置 -->
<context:property-placeholder location="classpath:db.properties"></context:property-placeholder>
<!-- 1.将连接池交给Spring管理 -->
<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
	<property name="jdbcUrl" value="${jdbc.jdbcUrl}" ></property>
	<property name="driverClass" value="${jdbc.driverClass}" ></property>
	<property name="user" value="${jdbc.user}" ></property>
	<property name="password" value="${jdbc.password}" ></property>
</bean>
<!-- 2。核心事务管理让spring来管理事务 -->
<bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
	<property name="sessionFactory" ref="sessionFactory"></property>
</bean>
<!-- 3。加载配置hibernate信息 -->
<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
	<!-- 将连接池注入到sessionFactory中，使其获得连接 -->
	<property name="dataSource" ref="dataSource"></property>
	<!-- 配置hibernate信息 -->
	<property name="hibernateProperties">
		<props>
			<prop key="hibernate.hbm2ddl.auto">update</prop>
			<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
			<prop key="hibernate.show_sql">true</prop>
			<prop key="hibernate.format_sql">true</prop>
		</props>
	</property>
	<!-- 引入orm元数据，读取hibernate映射配置文件 不加*号会找不到这个文件所以需要加星号匹配 -->
	<!--<property name="mappingDirectoryLocations" value="classpath*:/com/../../domain"></property>--> 
	<property name="mappingLocations"> 
	    <value>classpath:/com/baizhi/cooler/domain/*.hbm.xml</value> 
	</property>
</bean>
<!--使用注解的方式配置事务管理-->
<tx:annotation-driven transaction-manager="transactionManager"/>
<!-- 开启组件扫描-->
<context:component-scan base-package="com.baizhi.cooler.web,com.baizhi.cooler.domain,com.baizhi.cooler.service.impl,com.baizhi.cooler.dao.impl" use-default-filters="false"></context:component-scan>
<!-- 支持spring注解   dao:@Repository;service:@Service;控制层：@Controller;通用的主键扫描：@Component
<context:annotation-config></context:annotation-config>-->
<bean id="userAction" class="com.baizhi.cooler.web.UserAction">
	<property name="userService" ref="userService"></property>
</bean>
<bean id="userService" class="com.baizhi.cooler.service.impl.UserServiceImpl">
	<property name="userDao" ref="userDao"></property>
</bean>
<bean id="userDao" class="com.baizhi.cooler.dao.impl.UserDaoImpl">
	<property name="sessionFactory" ref="sessionFactory"></property>
</bean>
</beans>

